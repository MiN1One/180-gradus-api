{"version":3,"sources":["hooks/useEditCart.js","UI/Backdrop/Backdrop.js","hooks/useEditFavorites.js","UI/Modal/Modal.js","UI/Logo/Logo.js","components/Cart/Cart.js","components/Favorites/Favorites.js","UI/Notifier/Notifier.js","mobile/components/Navigation/Navigation.js"],"names":["useEditCart","cart","useSelector","s","dispatch","useDispatch","inTheCart","useCallback","id","findIndex","el","_id","editCart","skin","newList","filter","push","actions","sessionStorage","setItem","JSON","stringify","Backdrop","z","close","className","style","zIndex","onClick","useEditFavorites","favorites","isFavorite","editFavorites","length","localStorage","Modal","props","t","useTranslation","title","children","price","edit","cancel","editSave","primary","actionTitle","ModalFavItem","data","add","remove","media","history","useHistory","type","category","deviceId","src","image","alt","name","width","height","effect","device","to","ModalCartItem","parseFloat","toFixed","Logo","logoSvg","Cart","useState","editMode","setEditMode","cartItems","setCartItems","removedItems","setRemovedItems","useEffect","items","map","item","find","prev","removeItem","totalPrice","reduce","acc","console","log","newCart","forEach","r","onApplyChanges","React","memo","connect","state","mid","favItems","setFavItems","favoriteItems","i","removed","prevState","removeFromFav","newFavorites","Notifier","favChanged","setFavChanged","cartChanged","setCartChanged","prevFavLength","useRef","prevCartLength","prevFavItems","prevCartItems","timer","current","setTimeout","clearTimeout","Navigation","location","useLocation","menu","setMenu","favView","setFavView","cartView","setCartView","categories","root","document","getElementById","documentElement","overflow","transition","transform","removeProperty","removeAttribute","pathname","isHome","navItems","activeClassName","data-premium","exclusive","exact","role"],"mappings":"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","file":"static/js/10.fe2bf83f.chunk.js","sourcesContent":["import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst useEditCart = () => {\r\n  const { cart } = useSelector(s => s);\r\n  const dispatch = useDispatch();\r\n\r\n  const inTheCart = useCallback((id) => {\r\n    return cart.findIndex(el => el._id === id) !== -1;\r\n  }, [cart]);\r\n\r\n  const editCart = useCallback((skin) => {\r\n    let newList = [...cart];\r\n\r\n    if (inTheCart(skin._id)) {\r\n      newList = newList.filter(el => el._id !== skin._id);\r\n    } else {\r\n      newList.push(skin);\r\n    }\r\n\r\n    dispatch(actions.setData('cart', newList));\r\n    sessionStorage.setItem('cart', JSON.stringify(newList));\r\n\r\n  }, [cart, dispatch, inTheCart]);\r\n  \r\n  return {\r\n    cart,\r\n    inTheCart,\r\n    editCart\r\n  };\r\n}\r\n\r\nexport default useEditCart;\r\n","import './Backdrop.scss';\r\n\r\nconst Backdrop = ({ z, close, className }) => (\r\n    <div \r\n        className={`backdrop ${className || ''}`} \r\n        style={{ zIndex: z }} \r\n        onClick={() => close()} />\r\n);\r\n\r\nexport default Backdrop;","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst useEditFavorites = () => {\r\n  const { favorites } = useSelector(s => s);\r\n  const dispatch = useDispatch();\r\n\r\n  const isFavorite = useCallback((id) => {\r\n    return favorites.findIndex(el => el._id === id) !== -1;\r\n  }, [favorites]);\r\n\r\n  const editFavorites = useCallback((skin) => {\r\n    let newList = [...favorites];\r\n\r\n    if (isFavorite(skin._id)) {\r\n      newList = newList.filter(el => el._id !== skin._id);\r\n    } else if (favorites.length < 10) {\r\n      newList.push(skin);\r\n    }\r\n\r\n    dispatch(actions.setData('favorites', newList));\r\n    localStorage.setItem('favorites', JSON.stringify(newList));\r\n\r\n  }, [favorites, dispatch, isFavorite]);\r\n  \r\n  return {\r\n    favorites,\r\n    isFavorite,\r\n    editFavorites\r\n  };\r\n}\r\n\r\nexport default useEditFavorites;\r\n","import { Scrollbars } from 'react-custom-scrollbars';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BiX, BiPlus } from 'react-icons/bi';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport './Modal.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst Modal = (props) => {\r\n    const { t } = useTranslation();\r\n    \r\n    return (\r\n        <>\r\n            <Backdrop close={props.close} z={100} />\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__head\">\r\n                    <h3 className=\"Modal__title heading heading--main\">{props.title}</h3>\r\n                    <button className=\"btn btn__circle\" onClick={props.close}>\r\n                        <BiX className=\"icon\" />\r\n                    </button>\r\n                </div>\r\n                <Scrollbars className=\"Modal__body\">\r\n                    <div className=\"Modal__wrapper\">\r\n                        {props.children || \r\n                            <p className=\"Modal__text\">\r\n                                {t('main.nothing here')}\r\n                            </p>\r\n                        }\r\n                    </div>\r\n                </Scrollbars>\r\n                <div className=\"Modal__footer\">\r\n                    {props.children &&\r\n                        <div className=\"flex aic\">\r\n                            {props.price &&\r\n                                <span className=\"price-tag mr-1\">\r\n                                    {t('main.total')}: ${props.price}\r\n                                </span>\r\n                            }\r\n                            {props.edit &&\r\n                                <button className=\"btn btn__ghost btn__ghost--active Modal__btn\" onClick={() => props.cancel()}>\r\n                                    {t('main.cancel')}\r\n                                </button>\r\n                            }\r\n                            {props.editSave &&\r\n                                <button className=\"btn btn__ghost btn__ghost--active Modal__btn\" onClick={() => props.editSave()}>\r\n                                    {props.edit ? t('main.save') : t('main.edit')}\r\n                                </button>\r\n                            }\r\n                            {(props.primary && !props.edit) &&\r\n                                <button className=\"btn btn__ghost btn__ghost--active Modal__btn\" onClick={() => props.primary()}>\r\n                                    {props.actionTitle}\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n\r\nexport const ModalFavItem = ({ data, edit, add, remove, media }) => {\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div \r\n            className=\"Modal__item\" \r\n            onClick={() => {\r\n                if (media) history.push(`/categories/${data.type}/${data.category}/${data.deviceId}`);\r\n            }}>\r\n                <div className=\"flex aic\">\r\n                    <figure className=\"Modal__figure\">\r\n                        <LazyLoadImage\r\n                            className=\"img\"\r\n                            src={`/images/${data.image}`}\r\n                            alt={data.name}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            effect=\"opacity\" />\r\n                    </figure>\r\n                    <div className=\"flex fdc\">\r\n                        <span className=\"Modal__name\">{data.name}</span>\r\n                        <span className=\"Modal__name--sub\">{data.device}&nbsp;&nbsp;&bull;&nbsp;&nbsp;{t(`nav.${data.type}`)}</span>\r\n                    </div>\r\n                </div>\r\n                {edit \r\n                    ? <button className=\"btn btn__pill btn__pill--red\" onClick={remove}>\r\n                        {t('main.remove')}\r\n                    </button>\r\n                    : (\r\n                        <div className=\"flex\">\r\n                            {!media && \r\n                                <Link to={`/categories/${data.type}/${data.category}/${data.deviceId}`} className=\"btn btn__pill btn__pill--yellow mr-1\">\r\n                                    {t('nav.collection')}\r\n                                </Link>\r\n                            }\r\n                            <button className=\"btn btn__pill\" onClick={add}>\r\n                                {t('main.to cart')}\r\n                                <BiPlus className=\"ml-5 icon--sm\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const ModalCartItem = ({ data, edit, remove }) => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div className=\"Modal__item\" >\r\n            <div className=\"flex aic\">\r\n                <figure className=\"Modal__figure\">\r\n                    <LazyLoadImage\r\n                        className=\"img\"\r\n                        src={`/images/${data.image}`}\r\n                        alt={data.name}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        effect=\"opacity\" />\r\n                </figure>\r\n                <div className=\"flex fdc\">\r\n                    <span className=\"Modal__name\">{data.name}</span>\r\n                    <span className=\"Modal__name--sub\">{data.device}&nbsp;&nbsp;&bull;&nbsp;&nbsp;{t('nav.skins')}</span>\r\n                </div>\r\n            </div>\r\n            {edit \r\n                ? <button className=\"btn btn__pill btn__pill--red\" onClick={remove}>\r\n                    {t('main.remove')}\r\n                </button>\r\n                : <span className=\"price-tag\">${parseFloat(data.price).toFixed(2)}</span>\r\n            }\r\n        </div>\r\n    )\r\n};","import { Link } from 'react-router-dom';\r\nimport logoSvg from '../../assets/180illustrator-1.svg';\r\n// import sprite from '../../assets/logo-sm-sprite.svg';\r\n\r\nconst Logo = ({ className }) => (\r\n    <Link to=\"/\" className={`logo ${className || ''}`}>\r\n        {/* <svg className=\"logo__icon\">\r\n            <use xlinkHref={`${sprite}#180illustrator`} />\r\n        </svg> */}\r\n        <img src={logoSvg} alt=\"logo\" width=\"100%\" height=\"100%\" />\r\n        {/* <object \r\n            type=\"image/svg+xml\" \r\n            data={logoSvg} \r\n            width=\"100%\" \r\n            height=\"100%\"\r\n            aria-labelledby=\"180logo\"\r\n            style={{ pointerEvents: 'none' }}>\r\n        </object> */}\r\n    </Link>\r\n);\r\n\r\nexport default Logo;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport useEditCart from '../../hooks/useEditCart';\r\nimport * as actions from '../../store/actions';\r\n\r\nimport Modal, { ModalCartItem } from '../../UI/Modal/Modal';\r\n\r\nconst Cart = ({ t, close }) => {\r\n    const { cart } = useEditCart();\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [cartItems, setCartItems] = useState([ ...cart ]);\r\n    const [removedItems, setRemovedItems] = useState([]);\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => setCartItems([ ...cart ]), [cart]);\r\n\r\n    const onRevertChanges = () => {\r\n        setCartItems(cart);\r\n        setEditMode(false);\r\n        setRemovedItems([]);\r\n    };\r\n\r\n    const onApplyChanges = () => {\r\n        // removedItems.forEach(el => {\r\n        //     editCart(el);\r\n        //     console.log(el);\r\n        // });\r\n        let newCart = [...cart];\r\n        removedItems.forEach(r => {\r\n            newCart = newCart.filter(el => el._id !== r._id);\r\n        });\r\n        dispatch(actions.setData('cart', newCart));\r\n        sessionStorage.setItem('cart', JSON.stringify(newCart));\r\n        setEditMode(false);\r\n        setRemovedItems([]);\r\n    };\r\n\r\n    const removeItem = (id) => {\r\n        const item = cartItems.find(el => el._id === id);\r\n        setRemovedItems(prev => [...prev, item && item]);\r\n        \r\n        const newList = cartItems.filter(el => el._id !== id);\r\n        setCartItems(newList);\r\n    };\r\n\r\n    const items = cartItems.map((el) => (\r\n        <ModalCartItem \r\n            key={el._id}\r\n            data={el}\r\n            edit={editMode}\r\n            remove={() => removeItem(el._id)} />\r\n    ));\r\n\r\n    const totalPrice = cart.length !== 0 && cart.reduce((acc, el) => acc + parseFloat(el.price), 0);\r\n\r\n    console.log(removedItems)\r\n\r\n    return (\r\n        <Modal\r\n            actionTitle={t('main.proceed')}\r\n            primary={() => history.push('/summary')}\r\n            title={t('nav.cart')}\r\n            cancel={onRevertChanges}\r\n            price={totalPrice && totalPrice.toFixed(2)}\r\n            close={() => {\r\n                close(false);\r\n                setEditMode(false);\r\n            }}\r\n            editSave={() => editMode ? onApplyChanges() : setEditMode(true)}\r\n            edit={editMode}>\r\n                {cart.length !== 0 && items}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default React.memo(Cart);","import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport useEditCart from '../../hooks/useEditCart';\r\nimport useEditFavorites from '../../hooks/useEditFavorites';\r\n\r\nimport * as actions from '../../store/actions';\r\nimport Modal, { ModalFavItem } from '../../UI/Modal/Modal';\r\n\r\nconst Favorites = ({ t, close, media }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { editFavorites, favorites } = useEditFavorites();\r\n    const { editCart } = useEditCart();\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [favItems, setFavItems] = useState([ ...favorites ]);\r\n    const [removedItems, setRemovedItems] = useState([]);\r\n\r\n    useEffect(() => setFavItems([ ...favorites ]), [favorites]);\r\n\r\n    const onRevertChanges = () => {\r\n        setFavItems(favorites);\r\n        setEditMode(false);\r\n        setRemovedItems([]);\r\n    };\r\n\r\n    const onApplyChanges = () => {\r\n        removedItems.forEach(el => editFavorites(el));\r\n        let newFavorites = [...favorites];\r\n        removedItems.forEach(r => {\r\n            newFavorites = newFavorites.filter(el => el._id !== r._id);\r\n        });\r\n        dispatch(actions.setData('favorites', newFavorites));\r\n        localStorage.setItem('favorites', JSON.stringify(newFavorites));\r\n        setEditMode(false);\r\n        setRemovedItems([]);\r\n    };\r\n\r\n    const removeFromFav = (id) => {\r\n        const removed = favItems.find(el => el._id === id);\r\n        const newList = favItems.filter(el => el._id !== id);\r\n        setRemovedItems(prevState => [...prevState, removed && removed]);\r\n        setFavItems(newList);\r\n    };\r\n\r\n    const favoriteItems = favItems.map((el, i) => (\r\n        <ModalFavItem\r\n            key={el._id}\r\n            media={media} \r\n            data={el}\r\n            edit={editMode}\r\n            add={() => editCart(el)}\r\n            remove={() => removeFromFav(el._id)} />\r\n    ));\r\n\r\n    return (\r\n        <Modal\r\n            actionTitle={editMode ? t('main.save') : t('main.edit')}\r\n            editSave={() => editMode ? onApplyChanges() : setEditMode(true)}\r\n            title={t('nav.favorites')}\r\n            edit={editMode}\r\n            cancel={onRevertChanges}\r\n            close={() => {\r\n                close(false);\r\n                setEditMode(false);\r\n            }}>\r\n                {favorites.length > 0 && favoriteItems}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst state = state => ({\r\n    favorites: state.favorites,\r\n    media: state.media.mid\r\n});\r\n\r\nexport default React.memo(connect(state)(Favorites));","import { useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { BiBell, BiX } from \"react-icons/bi\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notifier = () => {\r\n    const { t } = useTranslation();\r\n    const { favorites, cart } = useSelector(state => state);\r\n    const [favChanged, setFavChanged] = useState(false);\r\n    const [cartChanged, setCartChanged] = useState(false);\r\n\r\n    const prevFavLength = useRef();\r\n    const prevCartLength = useRef();\r\n\r\n    const prevFavItems = useRef();\r\n    const prevCartItems = useRef();\r\n\r\n    useEffect(() => {\r\n        let timer;\r\n        if (prevFavLength.current < favorites.length) {\r\n            setFavChanged(true);\r\n            timer = setTimeout(() => {\r\n                setFavChanged(false);\r\n            }, 5000);\r\n        }\r\n        return () => clearTimeout(timer);\r\n    }, [favorites.length]);\r\n    \r\n    useEffect(() => {\r\n        let timer;\r\n        if (prevCartLength.current < cart.length) {\r\n            setCartChanged(true);\r\n            timer = setTimeout(() => {\r\n                setCartChanged(false);\r\n            }, 5000);\r\n        }\r\n        return () => clearTimeout(timer);\r\n    }, [cart.length]);\r\n\r\n    useEffect(() => {\r\n        prevCartItems.current = [...cart];\r\n        prevCartLength.current = cart.length;\r\n    });\r\n\r\n    useEffect(() => {\r\n        prevFavItems.current = [...favorites];\r\n        prevFavLength.current = favorites.length;\r\n    });\r\n    \r\n    return (favChanged || cartChanged) ? (\r\n        <div className=\"notifier\">\r\n            <div className=\"container pos-rel\">\r\n                <div className=\"notifier__wrapper\">\r\n                    <div className=\"notifier__content\">\r\n                        <div className=\"notifier__message flex aic\">\r\n                            <BiBell className=\"icon--sm mr-1\" />\r\n                            {cartChanged\r\n                                ? t('main.added cart')\r\n                                : t('main.added fav')\r\n                            }\r\n                        </div>\r\n                        <button className=\"btn btn__circle ml-1\" onClick={() => {\r\n                            cartChanged && setCartChanged(false);\r\n                            favChanged && setFavChanged(false);\r\n                        }}>\r\n                            <BiX className=\"icon--sm\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default Notifier;","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AiOutlineStar } from 'react-icons/ai';\r\nimport { BiCart, BiMenuAltLeft, BiMenuAltRight } from 'react-icons/bi';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nimport Cart from '../../../components/Cart/Cart';\r\nimport Favorites from '../../../components/Favorites/Favorites';\r\nimport Backdrop from '../../../UI/Backdrop/Backdrop';\r\nimport Logo from '../../../UI/Logo/Logo';\r\nimport Notifier from '../../../UI/Notifier/Notifier';\r\nimport './Navigation.scss';\r\n\r\nconst Navigation = () => {\r\n    const { t } = useTranslation();\r\n    const location = useLocation();\r\n    const [menu, setMenu] = useState(false);\r\n    const [favView, setFavView] = useState(false);\r\n    const [cartView, setCartView] = useState(false);\r\n    const categories = useSelector(state => state.categories);\r\n    \r\n    useEffect(() => {\r\n        const root = document.getElementById('root');\r\n        if (menu) {\r\n            document.documentElement.style.overflow = 'hidden';\r\n            root.style.transition = 'all .3s ease';\r\n            root.style.transform = 'translateX(-60vw)';\r\n        } else {\r\n            root.style.removeProperty('transform');\r\n            document.documentElement.style.removeProperty('overflow');\r\n        }\r\n\r\n        return () => {\r\n            root.removeAttribute('style');\r\n            document.documentElement.removeAttribute('style');\r\n        };\r\n    }, [menu]);\r\n\r\n    useEffect(() => {\r\n        setMenu(false);\r\n        setFavView(false);\r\n        setCartView(false);\r\n    }, [location.pathname]);\r\n\r\n    const isHome = location.pathname === '/'; \r\n\r\n    const navItems = categories && categories.map((el, i) => (\r\n        <NavLink \r\n            key={i} \r\n            activeClassName=\"m-nav__link--active\" \r\n            to={`/categories/${el.type}/${el.name}`}\r\n            className=\"m-nav__link\"\r\n            data-premium={el.exclusive}>\r\n                {t(`nav.${el.name}`)}\r\n        </NavLink>\r\n    ));\r\n\r\n    return (\r\n        <>  \r\n            <Notifier />\r\n            {favView && <Favorites t={t} close={() => setFavView(false)} />}\r\n            {cartView && <Cart t={t} close={() => setCartView(false)} />}\r\n            {menu &&\r\n                <>\r\n                    <Backdrop z={109} close={() => setMenu(false)} className=\"backdrop--transparent\" />\r\n                    <nav className=\"m-nav__bar\">\r\n                        <div className=\"m-nav__group\">\r\n                            <span className=\"m-nav__title text text--mid\">{t('main.categories')}:</span>\r\n                            <NavLink activeClassName=\"m-nav__link--active\" exact to=\"/categories/skins\" className=\"m-nav__link\">\r\n                                {t('nav.skins')}\r\n                            </NavLink>\r\n                            {navItems}\r\n                        </div>\r\n                        <div className=\"m-nav__group\">\r\n                            <button \r\n                                onClick={() => {\r\n                                    setMenu(false);\r\n                                    setFavView(true);\r\n                                }} \r\n                                className=\"btn btn__ghost btn__ghost--active\">\r\n                                    {/* {t('nav.favorites')} */}\r\n                                    <AiOutlineStar className=\"icon\" />\r\n                            </button>\r\n                            <button \r\n                                onClick={() => {\r\n                                    setMenu(false);\r\n                                    setCartView(true);\r\n                                }} \r\n                                className=\"btn btn__ghost btn__ghost--active\">\r\n                                    {/* {t('nav.favorites')} */}\r\n                                    <BiCart className=\"icon\" />\r\n                            </button>\r\n                        </div>\r\n                    </nav>\r\n                </>\r\n            }\r\n            <nav role=\"navigation\" className=\"m-nav\">\r\n                <div className=\"container w-100\">\r\n                    <div className={`flex aic ${isHome ? 'jce' : 'jcsb'}`}>\r\n                        {!isHome && <Logo />}\r\n                        <button className={`m-nav__menu ${menu ? 'm-nav__menu--active' : ''}`} onClick={() => setMenu(true)}>\r\n                            {menu\r\n                                ? <>\r\n                                    <BiMenuAltLeft className=\"icon mr-5\" />\r\n                                    {t('main.close')}\r\n                                </>\r\n                                : <>\r\n                                    <BiMenuAltRight className=\"icon mr-5\" />\r\n                                    {t('nav.menu')}\r\n                                </>\r\n                            }\r\n                            \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(Navigation);"],"sourceRoot":""}