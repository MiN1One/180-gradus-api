{"version":3,"sources":["hooks/useEditCart.js","hooks/useEditFavorites.js","UI/SubSpinner/SubSpinner.js","../node_modules/swiper/esm/components/navigation/navigation.js","mobile/containers/Main/Main.js"],"names":["useEditCart","cart","useSelector","s","dispatch","useDispatch","inTheCart","useCallback","id","findIndex","el","_id","editCart","skin","newList","filter","push","actions","sessionStorage","setItem","JSON","stringify","useEditFavorites","favorites","isFavorite","editFavorites","length","localStorage","SubSpinner","className","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","Navigation","toggleEl","$el","disabled","params","navigation","disabledClass","tagName","update","swiper","loop","_swiper$navigation","$nextEl","$prevEl","isBeginning","watchOverflow","enabled","isLocked","lockClass","isEnd","onPrevClick","e","preventDefault","slidePrev","onNextClick","slideNext","init","createElementIfNotDefined","createElements","nextEl","prevEl","$","uniqueNavElements","find","on","extend","addClass","destroy","_swiper$navigation2","off","removeClass","name","hideOnClick","hiddenClass","create","bindModuleMethods","toEdge","fromEdge","_swiper$navigation3","click","_swiper$navigation4","targetEl","is","pagination","clickable","contains","isHidden","hasClass","emit","toggleClass","SwiperCore","use","Main","props","useParams","history","useHistory","useState","setSwiper","loadingImage","setLoadingImage","selectedSkin","setSelectedSkin","data","setData","loading","setLoading","t","useTranslation","device","useEffect","mounted","useRef","current","onSetData","axiosInstance","then","console","log","category","imagePreloader","Image","src","image","complete","onload","skins","deviceName","map","categories","cat","deviceId","type","onClick","alt","placeholder","width","height","effect","border","default","slidesPerView","spaceBetween","breakpoints","200","350","400","500","600","700","onInit","sw","parseFloat","price","toFixed","connect","state","onAddToCart","val","React","memo"],"mappings":"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","file":"static/js/12.2b799a28.chunk.js","sourcesContent":["import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst useEditCart = () => {\r\n  const { cart } = useSelector(s => s);\r\n  const dispatch = useDispatch();\r\n\r\n  const inTheCart = useCallback((id) => {\r\n    return cart.findIndex(el => el._id === id) !== -1;\r\n  }, [cart]);\r\n\r\n  const editCart = useCallback((skin) => {\r\n    let newList = [...cart];\r\n\r\n    if (inTheCart(skin._id)) {\r\n      newList = newList.filter(el => el._id !== skin._id);\r\n    } else {\r\n      newList.push(skin);\r\n    }\r\n\r\n    dispatch(actions.setData('cart', newList));\r\n    sessionStorage.setItem('cart', JSON.stringify(newList));\r\n\r\n  }, [cart, dispatch, inTheCart]);\r\n  \r\n  return {\r\n    cart,\r\n    inTheCart,\r\n    editCart\r\n  };\r\n}\r\n\r\nexport default useEditCart;\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst useEditFavorites = () => {\r\n  const { favorites } = useSelector(s => s);\r\n  const dispatch = useDispatch();\r\n\r\n  const isFavorite = useCallback((id) => {\r\n    return favorites.findIndex(el => el._id === id) !== -1;\r\n  }, [favorites]);\r\n\r\n  const editFavorites = useCallback((skin) => {\r\n    let newList = [...favorites];\r\n\r\n    if (isFavorite(skin._id)) {\r\n      newList = newList.filter(el => el._id !== skin._id);\r\n    } else if (favorites.length < 10) {\r\n      newList.push(skin);\r\n    }\r\n\r\n    dispatch(actions.setData('favorites', newList));\r\n    localStorage.setItem('favorites', JSON.stringify(newList));\r\n\r\n  }, [favorites, dispatch, isFavorite]);\r\n  \r\n  return {\r\n    favorites,\r\n    isFavorite,\r\n    editFavorites\r\n  };\r\n}\r\n\r\nexport default useEditFavorites;\r\n","const SubSpinner = ({ className }) => (<div className={`loading ${className ? className : ''}`}></div>);\r\n\r\nexport default SubSpinner;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport $ from '../../utils/dom';\nimport { extend, bindModuleMethods, createElementIfNotDefined } from '../../utils/utils';\nvar Navigation = {\n  toggleEl: function toggleEl($el, disabled) {\n    $el[disabled ? 'addClass' : 'removeClass'](this.params.navigation.disabledClass);\n    if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n  },\n  update: function update() {\n    // Update Navigation Buttons\n    var swiper = this;\n    var params = swiper.params.navigation;\n    var toggleEl = swiper.navigation.toggleEl;\n    if (swiper.params.loop) return;\n    var _swiper$navigation = swiper.navigation,\n        $nextEl = _swiper$navigation.$nextEl,\n        $prevEl = _swiper$navigation.$prevEl;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        toggleEl($prevEl, true);\n      } else {\n        toggleEl($prevEl, false);\n      }\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $prevEl[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        toggleEl($nextEl, true);\n      } else {\n        toggleEl($nextEl, false);\n      }\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $nextEl[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n  },\n  onPrevClick: function onPrevClick(e) {\n    var swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick: function onNextClick(e) {\n    var swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init: function init() {\n    var swiper = this;\n    var params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper.$el, swiper.params.navigation, swiper.params.createElements, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    var $nextEl;\n    var $prevEl;\n\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n\n      if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n\n      if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    extend(swiper.navigation, {\n      $nextEl: $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl: $prevEl,\n      prevEl: $prevEl && $prevEl[0]\n    });\n\n    if (!swiper.enabled) {\n      if ($nextEl) $nextEl.addClass(params.lockClass);\n      if ($prevEl) $prevEl.addClass(params.lockClass);\n    }\n  },\n  destroy: function destroy() {\n    var swiper = this;\n    var _swiper$navigation2 = swiper.navigation,\n        $nextEl = _swiper$navigation2.$nextEl,\n        $prevEl = _swiper$navigation2.$prevEl;\n\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  }\n};\nexport default {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock'\n    }\n  },\n  create: function create() {\n    var swiper = this;\n    bindModuleMethods(swiper, {\n      navigation: _extends({}, Navigation)\n    });\n  },\n  on: {\n    init: function init(swiper) {\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge: function toEdge(swiper) {\n      swiper.navigation.update();\n    },\n    fromEdge: function fromEdge(swiper) {\n      swiper.navigation.update();\n    },\n    destroy: function destroy(swiper) {\n      swiper.navigation.destroy();\n    },\n    'enable disable': function enableDisable(swiper) {\n      var _swiper$navigation3 = swiper.navigation,\n          $nextEl = _swiper$navigation3.$nextEl,\n          $prevEl = _swiper$navigation3.$prevEl;\n\n      if ($nextEl) {\n        $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n      }\n\n      if ($prevEl) {\n        $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n      }\n    },\n    click: function click(swiper, e) {\n      var _swiper$navigation4 = swiper.navigation,\n          $nextEl = _swiper$navigation4.$nextEl,\n          $prevEl = _swiper$navigation4.$prevEl;\n      var targetEl = e.target;\n\n      if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n        if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n        var isHidden;\n\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n\n        if (isHidden === true) {\n          swiper.emit('navigationShow');\n        } else {\n          swiper.emit('navigationHide');\n        }\n\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    }\n  }\n};","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { BiCart, BiChevronLeft, BiChevronRight, BiX } from 'react-icons/bi';\r\nimport { connect } from 'react-redux';\r\nimport { AiFillStar, AiOutlineStar } from 'react-icons/ai';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport * as actions from '../../../store/actions';\r\nimport './Main.scss';\r\nimport axiosInstance from '../../../axios';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport SubSpinner from '../../../UI/SubSpinner/SubSpinner';\r\nimport useEditFavorites from '../../../hooks/useEditFavorites';\r\nimport useEditCart from '../../../hooks/useEditCart';\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nconst Main = (props) => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [swiper, setSwiper] = useState(null);\r\n    const [loadingImage, setLoadingImage] = useState(false);\r\n    const [selectedSkin, setSelectedSkin] = useState(null);\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { isFavorite, editFavorites } = useEditFavorites();\r\n    const { inTheCart, editCart } = useEditCart(); \r\n    \r\n    const { t } = useTranslation(['translation', data && data.device]);\r\n\r\n    useEffect(() => swiper && swiper.update());\r\n\r\n    const mounted = useRef();\r\n    useEffect(() => {\r\n        mounted.current = true;\r\n        return () => mounted.current = false;\r\n    }, []);\r\n\r\n    const { onSetData } = props;\r\n    useEffect(() => {\r\n        if (mounted.current) {\r\n            setLoading(true);\r\n            axiosInstance(`/skins/${params.id}`)\r\n                .then(({ data }) => {\r\n                    setData(data.data.data);\r\n                    onSetData('data', data.data.data.device);\r\n                    console.log(data);\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, [params.category, params.id, onSetData]);\r\n\r\n    useEffect(() => {\r\n        if (selectedSkin) {\r\n            setLoadingImage(true);\r\n            const imagePreloader = new Image();\r\n      \r\n            imagePreloader.src = `/images/${selectedSkin.image}`;\r\n\r\n            if (imagePreloader.complete) {\r\n                setLoadingImage(false);\r\n                imagePreloader.onload = null;\r\n            } else {\r\n                imagePreloader.onload = () => {\r\n                    setLoadingImage(false);\r\n                    imagePreloader.onload = null;\r\n                };\r\n            }\r\n        }\r\n    }, [selectedSkin]);\r\n\r\n    let skins = null, deviceName = null;\r\n\r\n    if (data) {\r\n        deviceName = data.device;\r\n\r\n        skins = data.skins.map((el, i) => {\r\n            el.device = deviceName;\r\n            const category = props.categories && props.categories.find(cat => cat._id === data.category);\r\n            el.category = category && category.name;\r\n            el.deviceId = data._id;\r\n            el.type = data.type;\r\n\r\n            return (\r\n                <SwiperSlide \r\n                    key={el._id}\r\n                    className={`m-main__sets-item ${(selectedSkin && selectedSkin._id === el._id) ? 'm-main__sets-item--active' : ''}`} \r\n                    onClick={() => setSelectedSkin(el)}>\r\n                        <LazyLoadImage \r\n                            className=\"img\" \r\n                            alt={el.name} \r\n                            src={`/images/placeholders/${el.placeholder}`} \r\n                            width=\"100%\" \r\n                            height=\"100%\"\r\n                            effect=\"opacity\" />\r\n                </SwiperSlide>\r\n            )\r\n        });\r\n    }\r\n\r\n    if (loading)\r\n        return <Spinner />;\r\n\r\n    return (\r\n        <section className=\"m-main\">\r\n            <div className=\"main-head\">\r\n                <div className=\"container\">\r\n                    <div className=\"flex aic\">\r\n                        <button className=\"btn btn__square mr-2\" onClick={() => history.push(`/categories/${data && data.type}/${params.category}`)}>\r\n                            <BiChevronLeft className=\"icon--lg icon--dark\" />\r\n                        </button>\r\n                        <h2 className=\"heading heading--1 heading--black\">\r\n                            {deviceName}\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"m-main__body\">\r\n                <div className=\"m-main__top\">\r\n                    <div className=\"container flex aic jcc fdc pos-rel\">\r\n                        <figure className=\"m-main__figure\">\r\n                            {loadingImage\r\n                                ? <SubSpinner />\r\n                                : (\r\n                                    <>\r\n                                        <img \r\n                                            border=\"0\"\r\n                                            className=\"Main__img\" \r\n                                            src={data ? `/images/${data.default}` : `/images/${selectedSkin && selectedSkin.image}`} \r\n                                            alt={data ? data.device : (selectedSkin && selectedSkin.name)} />\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </figure>\r\n                        {selectedSkin && \r\n                            <div className=\"flex fdc aic\">\r\n                                <span className=\"m-main__title text text--mid mb-1\">\r\n                                    {t(`${deviceName}:${selectedSkin.name}`)}\r\n                                </span>\r\n                                <div className=\"flex\">\r\n                                    <button  \r\n                                        className=\"btn btn__ghost btn__ghost--active mr-1\"\r\n                                        onClick={() => setSelectedSkin(null)}>\r\n                                            <BiX className=\"icon\" />\r\n                                    </button>\r\n                                    <button \r\n                                        className=\"btn btn__ghost btn__ghost--active\"\r\n                                        onClick={() => editFavorites(selectedSkin)}>\r\n                                            {isFavorite(selectedSkin._id)\r\n                                                ? <AiFillStar className=\"icon\" />\r\n                                                : <AiOutlineStar className=\"m-main__icon\" />\r\n                                            }\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"m-main__bottom\">\r\n                    <div className=\"container\">\r\n                        {selectedSkin &&\r\n                            <div className=\"flex mb-15 aic\">\r\n                                <h5 className=\"heading heading--sm c-white mr-1\">\r\n                                    {t(`${deviceName}:${selectedSkin.name}`)}\r\n                                </h5>\r\n                                <span className=\"mr-1 c-light\">&bull;</span>\r\n                                <span className=\"heading heading--sub c-light\">{t('translation:main.basic')}</span>\r\n                            </div>\r\n                        }\r\n                        <div className=\"pos-rel w-100\">\r\n                            <button className=\"btn__control m-main__control--left btn__control--prev\">\r\n                                <BiChevronLeft className=\"icon--sm\" />\r\n                            </button>\r\n                            <button className=\"btn__control m-main__control--right btn__control--next\">\r\n                                <BiChevronRight className=\"icon--sm\" />\r\n                            </button>\r\n                            <Swiper\r\n                                className=\"m-main__list\"\r\n                                navigation={{\r\n                                    nextEl: '.btn__control--next',\r\n                                    prevEl: '.btn__control--prev',\r\n                                    disabledClass: 'btn__control--disabled'\r\n                                }}\r\n                                slidesPerView={5}\r\n                                spaceBetween={15}\r\n                                breakpoints={{\r\n                                    // min-width\r\n                                    200: { slidesPerView: 2 },\r\n                                    350: { slidesPerView: 3 },\r\n                                    400: { slidesPerView: 4 },\r\n                                    500: { slidesPerView: 5 },\r\n                                    600: { slidesPerView: 6 },\r\n                                    700: { slidesPerView: 7 },\r\n                                }}\r\n                                onInit={(sw) => setSwiper(sw)}>\r\n                                    {skins}\r\n                            </Swiper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"m-main__summary\">\r\n                    <div className=\"container\">\r\n                        <div className=\"flex jce\">\r\n                            <div className=\"flex\">\r\n                                {selectedSkin && (\r\n                                    <span className=\"price-tag m-main__price mr-5\">\r\n                                        ${parseFloat(selectedSkin.price).toFixed(2)}\r\n                                    </span>\r\n                                )}\r\n                                <button \r\n                                    className={`m-main__btn ${inTheCart(selectedSkin?._id) ? 'm-main__btn--active' : ''}`} \r\n                                    disabled={selectedSkin ? false : true}\r\n                                    onClick={() => \r\n                                        !inTheCart(selectedSkin._id) && editCart(selectedSkin)\r\n                                    }>\r\n                                        {!inTheCart(selectedSkin?._id)\r\n                                            ? <>\r\n                                                {t('translation:main.to cart')}\r\n                                                <BiCart className=\"icon ml-5\" />\r\n                                            </>\r\n                                            : <>{t('translation:main.in the cart')}</>\r\n                                        }\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nconst state = (state) => ({\r\n    favorites: state.favorites,\r\n    cart: state.cart,\r\n    categories: state.categories\r\n});\r\n\r\nconst dispatch = dispatch => ({\r\n    onAddToCart: (id) => dispatch(actions.addToCart(id)),\r\n    onSetData: (name, val) => dispatch(actions.setData(name, val))\r\n});\r\n\r\nexport default connect(state, dispatch)(React.memo(Main));"],"sourceRoot":""}