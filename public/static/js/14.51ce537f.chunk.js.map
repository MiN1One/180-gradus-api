{"version":3,"sources":["UI/Backdrop/Backdrop.js","UI/SubSpinner/SubSpinner.js","UI/Confirm/Confirm.js","containers/AdminPanel/AdminPanel.js"],"names":["Backdrop","z","close","className","style","zIndex","onClick","SubSpinner","ConfirmationModel","click","items","message","t","useTranslation","Skins","useState","data","setData","panelLoading","setPanelLoading","fileInputRef","useRef","addMode","setAddMode","editMode","setEditMode","viewMode","setViewMode","selectedSkin","setSelectedSkin","confirm","setConfirm","newSkin","setNewSkin","useEffect","axiosInstance","then","console","log","devId","_id","skins","map","el","i","tabIndex","width","height","alt","name","effect","src","image","parseFloat","price","toFixed","devices","length","device","type","numberOfPurchases","Confirm","delete","res","newList","filter","placeholder","value","onChange","e","prev","target","accept","ref","current","id","newSkinsList","patch","onRemoveSkin","reduce","a","Auth","onAuth","login","setLogin","password","setPassword","error","setError","loading","setLoading","Spinner","onSubmit","preventDefault","post","token","catch","er","response","onLogin","Date","getFullYear","AdminPanel","params","useParams","authorized","setAuthorized","setToken","section","role","to","activeClassName","exact","path","jwt"],"mappings":"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","file":"static/js/14.51ce537f.chunk.js","sourcesContent":["import './Backdrop.scss';\r\n\r\nconst Backdrop = ({ z, close, className }) => (\r\n    <div className={`backdrop ${className || ''}`} style={{ zIndex: z }} onClick={() => close()}></div>\r\n);\r\n\r\nexport default Backdrop;","const SubSpinner = ({ className }) => (<div className={`loading ${className ? className : ''}`}></div>);\r\n\r\nexport default SubSpinner;","import { useTranslation } from 'react-i18next';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst ConfirmationModel = ({ click, close, message, items }) => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <>\r\n            <Backdrop z={100} close={close} />\r\n            <div className=\"confirm\">\r\n                <div>\r\n                    <p className=\"confirm__text\">{t('main.confirm')}</p>\r\n                    {items && <p className=\"confirm__text--sub\">{t('main.to delete')}: {items}</p>}\r\n                </div>\r\n                <div className=\"flex w-100 jce\">\r\n                    <button className=\"btn btn__ghost btn__ghost--active mr-1\" onClick={click}>\r\n                        {t('main.apply')}\r\n                    </button>\r\n                    <button className=\"btn btn__ghost btn__ghost--active\" onClick={close}>\r\n                        {t('main.cancel')}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfirmationModel;","import { useEffect, useRef, useState } from 'react';\r\nimport { NavLink, Route, Switch, useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { BiCheck, BiMinus, BiPencil, BiPlug, BiPlus, BiScreenshot, BiX } from 'react-icons/bi';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './AdminPanel.scss';\r\nimport axiosInstance from '../../axios';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport SubSpinner from '../../UI/SubSpinner/SubSpinner';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport ConfirmationModel from '../../UI/Confirm/Confirm';\r\n\r\nconst AdminPanel = () => {\r\n    const params = useParams();\r\n    const { t } = useTranslation();\r\n    const [authorized, setAuthorized] = useState(false);\r\n    const [token, setToken] = useState(null);\r\n    const [data, setData] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     axiosInstance.defaults.headers.common['Authorization'] = token && `Bearer ${token}`;\r\n    // }, [token]);\r\n    \r\n    useEffect(() => {\r\n        if (token) {\r\n            axiosInstance(`/${params.section || 'skins'}`)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    setData(res.data.data.data);\r\n                });\r\n        }\r\n    }, [token, params.section]);\r\n\r\n    if (!authorized)\r\n        return <Auth onAuth={(jwt) => {\r\n                setAuthorized(true);\r\n                setToken(jwt);\r\n            }} />;\r\n\r\n    return (\r\n        <>\r\n            <section className=\"admin\">\r\n                <div className=\"container\">\r\n                    <div className=\"admin__wrapper\">\r\n                        <nav className=\"admin__nav\" role=\"navigation\">\r\n                            <NavLink \r\n                                to=\"/admin\" \r\n                                activeClassName=\"admin__link--active\" \r\n                                className=\"admin__link\"\r\n                                exact>\r\n                                    {t('nav.dashboard')}\r\n                            </NavLink>\r\n                            <NavLink \r\n                                to=\"/admin/skins\" \r\n                                activeClassName=\"admin__link--active\" \r\n                                className=\"admin__link\">\r\n                                    {t('nav.skins')}\r\n                            </NavLink>\r\n                            <NavLink \r\n                                to=\"/admin/orders\" \r\n                                activeClassName=\"admin__link--active\" \r\n                                className=\"admin__link\">\r\n                                    {t('nav.orders')}\r\n                            </NavLink>\r\n                            <NavLink \r\n                                to=\"/admin/categories\" \r\n                                activeClassName=\"admin__link--active\" \r\n                                className=\"admin__link\">\r\n                                    {t('main.categories')}\r\n                            </NavLink>\r\n                            <NavLink \r\n                                to=\"/admin/users\" \r\n                                activeClassName=\"admin__link--active\" \r\n                                className=\"admin__link\">\r\n                                    {t('nav.users')}\r\n                            </NavLink>\r\n                        </nav>\r\n                        <div className=\"admin__body\">\r\n                            <Switch>\r\n                                <Route path=\"/admin/skins\">\r\n                                    <Skins token={token} />\r\n                                </Route>\r\n                                <Route path=\"/categories\">\r\n                                    Hello\r\n                                </Route>\r\n                                <Route path=\"/orders\">\r\n                                    Hello\r\n                                </Route>\r\n                                <Route path=\"/users\">\r\n                                    Hello\r\n                                </Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Skins = () => {\r\n    const { t } = useTranslation();\r\n    const [data, setData] = useState(null);\r\n    const [panelLoading, setPanelLoading] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fileInputRef = useRef();\r\n\r\n    const [addMode, setAddMode] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [viewMode, setViewMode] = useState(false);\r\n    const [selectedSkin, setSelectedSkin] = useState(null);\r\n    const [confirm, setConfirm] = useState(null);\r\n    const [newSkin, setNewSkin] = useState(null);\r\n\r\n    // modes: add, remove, edit, view\r\n\r\n    useEffect(() => {\r\n        // setLoading(true);\r\n        axiosInstance('/skins')\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                // setLoading(false);\r\n                setData(data.data.data);\r\n            });\r\n    }, []);\r\n\r\n    const devId = viewMode && viewMode._id;\r\n    useEffect(() => setNewSkin(null), [devId]);\r\n\r\n    const getSkins = (device) => {\r\n        setPanelLoading(true)\r\n        axiosInstance(`/skins/${device._id}?project=skins`)\r\n            .then(({ data }) => {\r\n                setViewMode({\r\n                    ...device,\r\n                    skins: data.data.data.skins\r\n                });\r\n                setPanelLoading(false);\r\n            });\r\n\r\n        setConfirm(null);\r\n    };\r\n\r\n    const onRemoveSkin = (id) => {\r\n        const newSkinsList = viewMode.skins.filter(el => el._id !== id);\r\n\r\n        axiosInstance\r\n            .patch(`/skins/${viewMode._id}`, { skins: newSkinsList })\r\n            .then(res => {\r\n                setViewMode({\r\n                    ...viewMode,\r\n                    skins: newSkinsList\r\n                });\r\n                setConfirm(false);\r\n                console.log(res);\r\n            });\r\n    };\r\n\r\n    const onUploadImage = () => {\r\n\r\n    };\r\n\r\n    const onSubmitSkin = () => {\r\n        axiosInstance\r\n            .patch(`/skins/${viewMode._id}`, { skins: [...viewMode.skins, newSkin] })\r\n            .then(() => {\r\n\r\n            });\r\n    };\r\n\r\n    const onRemoveDevice = () => {\r\n        axiosInstance\r\n            .delete(`/skins/${viewMode._id}`)\r\n            .then((res) => {\r\n                const newList = data.filter(el => el._id !== viewMode._id);\r\n                setData(newList);\r\n                setViewMode(null);\r\n                setConfirm(null);\r\n            });\r\n    };\r\n        \r\n    const skins = (viewMode && viewMode.skins) && viewMode.skins.map((el, i) => (\r\n        <div \r\n            className={`admin__panel-item ${(selectedSkin && selectedSkin._id === el._id) ? 'admin__panel-item--active' : ''}`} \r\n            key={i} \r\n            tabIndex=\"0\" \r\n            onClick={() => setSelectedSkin(el)}>\r\n                <div className=\"flex aic\">\r\n                    <figure className=\"admin__panel-figure\">\r\n                        <LazyLoadImage\r\n                            className=\"img\"\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            alt={el.name}\r\n                            effect=\"opacity\"\r\n                            src={`http://localhost:3003/images/${el.image}`} />\r\n                    </figure>\r\n                    <span className=\"admin__panel-itemname\">{el.name}</span>\r\n                </div>\r\n                <span className=\"admin__panel-itemprice\">${parseFloat(el.price).toFixed(2)}</span>\r\n        </div>\r\n    ));\r\n\r\n    const devices = (data && data.length > 0) && data.map((el, i) => (\r\n        <li \r\n            className=\"admin__item pos-rel\"\r\n            key={i}>\r\n                <div \r\n                    className={`admin__card ${(viewMode && el._id === viewMode._id) ? 'admin__card--active' : ''}`} \r\n                    onClick={() => {\r\n                        setEditMode(false);\r\n                        getSkins(el);\r\n                    }}\r\n                    tabIndex=\"0\">\r\n                        <div className=\"flex fdc mr-15\">\r\n                            <span className=\"admin__card-title\">{el.device}</span>\r\n                            <span className=\"heading heading--sub c-grey-l\">{el.type}</span>\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <span className=\"admin__card-feature\">{t('main.num skins')}: {el.skins.length}</span>\r\n                            <span className=\"admin__card-feature\">{t('main.num purchases')}: {el.numberOfPurchases}</span>\r\n                        </div>\r\n                </div>\r\n                <div className=\"admin__card-sets\">\r\n                    {(viewMode && viewMode._id === el._id) && \r\n                        <button className=\"admin__card-btn\" onClick={() => setConfirm('device')}>\r\n                            <BiX className=\"icon--sm\" />\r\n                        </button>\r\n                    }\r\n                </div>\r\n        </li>\r\n    ));\r\n\r\n    \r\n\r\n    // if (loading)\r\n    //     return <div className=\"wh-100 aic flex jcc\"><SubSpinner /></div>;\r\n\r\n    let panelView = null;\r\n    if (editMode) {\r\n        panelView = (\r\n            <>\r\n                <div className=\"admin__panel-head flex aic jcsb\">\r\n                    <h1 className=\"heading heaing--main\">{t('main.edit')}</h1>\r\n                    <button \r\n                        className=\"btn btn__circle\" \r\n                        onClick={() => setEditMode(null)}>\r\n                            <BiX className=\"icon\" />\r\n                    </button>\r\n                </div>\r\n                <div className=\"admin__panel-body\">\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex w-100 jce mb-15\">\r\n                {viewMode &&\r\n                    <button \r\n                        className=\"btn btn__ghost btn__ghost--active mr-1\" \r\n                        onClick={() => \r\n                            setNewSkin({\r\n                                name: '',\r\n                                price: '',\r\n                                image: null\r\n                            })\r\n                        }>\r\n                            {t('main.add skin')}\r\n                    </button>\r\n                }\r\n                <button \r\n                    className=\"btn btn__ghost btn__ghost--active\" \r\n                    onClick={() => {\r\n                        setAddMode(!addMode);\r\n                        setEditMode(false);\r\n                    }}>\r\n                        {addMode ? t('main.save') : t('main.add')}\r\n                </button>\r\n            </div>\r\n            <div className=\"flex w-100\">\r\n                {(confirm && confirm === 'device') &&\r\n                    <ConfirmationModel \r\n                        click={onRemoveDevice} \r\n                        close={() => setConfirm(null)}\r\n                        items={viewMode.device} />\r\n                }\r\n                {(data && data.length > 0)\r\n                    ? <div className=\"flex fdc w-100\">\r\n                        <Scrollbars className=\"fgr\" style={{ height: '25rem', width: '100%' }}>\r\n                            <ul className=\"admin__list\">{devices}</ul>\r\n                        </Scrollbars>\r\n                        {newSkin &&\r\n                            <div className=\"admin__form\">\r\n                                <div className=\"admin__panel-head\">\r\n                                    <div className=\"flex aic jcsb\">\r\n                                        <h1 className=\"heading heaing--main\">{t('main.add')}</h1>\r\n                                        <button \r\n                                            className=\"btn btn__circle\" \r\n                                            onClick={() => setNewSkin(null)}>\r\n                                                <BiX className=\"icon\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"flex w-100\">\r\n                                    <div className=\"w-100\">\r\n                                        <label className=\"admin__card-feature w-100\">\r\n                                            {t('main.name')}\r\n                                            <input \r\n                                                className=\"admin__input\"\r\n                                                type=\"text\"\r\n                                                placeholder={t('main.name')}\r\n                                                value={newSkin.name}\r\n                                                onChange={(e) => \r\n                                                    setNewSkin(prev => ({ ...prev, name: e.target.value }))\r\n                                                } />\r\n                                        </label>\r\n                                        <label className=\"admin__card-feature w-100\">\r\n                                            {t('main.price')}\r\n                                            <input \r\n                                                className=\"admin__input\"\r\n                                                type=\"text\"\r\n                                                placeholder={t('main.price')}\r\n                                                value={newSkin.price}\r\n                                                onChange={(e) => \r\n                                                    setNewSkin(prev => ({ ...prev, price: e.target.value }))\r\n                                                } />\r\n                                        </label>\r\n                                        <input \r\n                                            className=\"none\"\r\n                                            type=\"file\"\r\n                                            accept=\"image/*\"\r\n                                            ref={fileInputRef} />\r\n                                    </div>\r\n                                    <div className=\"admin__images\">\r\n                                        <span className=\"admin__card-feature\">Images:</span>\r\n                                        <button \r\n                                            className=\"btn btn__ghost btn__ghost--active\" \r\n                                            type=\"button\"\r\n                                            onClick={() => fileInputRef.current.click()}>\r\n                                                <BiScreenshot className=\"icon\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    : <div className=\"admin__list text text--mid tc\">{t('main.nothing here')}</div>\r\n                }\r\n                {addMode && \r\n                    <div className=\"admin__panel\">\r\n                        <div className=\"admin__panel-head flex aic jcsb\">\r\n                            <h1 className=\"heading heaing--main\">{t('main.add')}</h1>\r\n                            <button \r\n                                className=\"btn btn__circle\" \r\n                                onClick={() => setAddMode(false)}>\r\n                                    <BiX className=\"icon\" />\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"admin__panel-body\">\r\n\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {viewMode \r\n                    ? <div className=\"admin__panel\">\r\n                        {panelLoading\r\n                            ? <div className=\"wh-100 flex aic jcc\">\r\n                                <SubSpinner />\r\n                            </div>\r\n                            : <>\r\n                                {(confirm && confirm === 'skin') &&\r\n                                    <ConfirmationModel \r\n                                        click={() => onRemoveSkin(selectedSkin._id)} \r\n                                        close={() => setConfirm(null)}\r\n                                        items={`${viewMode.device}, ${selectedSkin.name}`} />\r\n                                }\r\n                                <div className=\"admin__panel-head\">\r\n                                    <div className=\"flex jcsb aic\">\r\n                                        <h1 className=\"heading heaing--main\">{viewMode.device}</h1>\r\n                                        <button \r\n                                            className=\"btn btn__circle\" \r\n                                            onClick={() => setViewMode(null)}>\r\n                                                <BiX className=\"icon\" />\r\n                                        </button>\r\n                                    </div>\r\n                                    <span className=\"admin__card-feature\">\r\n                                        {t('main.num skins')}: {viewMode.skins.length}; {t('main.avg price')}: ${parseFloat(viewMode.skins.reduce((a, el) => a + parseFloat(el.price), 0) / viewMode.skins.length).toFixed(2)}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"admin__panel-body\">\r\n                                    <Scrollbars className=\"admin__panel-wrapper\">\r\n                                        {skins}\r\n                                    </Scrollbars>\r\n                                </div>\r\n                                <div className=\"admin__panel-footer\">\r\n                                    {newSkin && \r\n                                        <button \r\n                                            className=\"admin__card-btn mr-5\" \r\n                                            onClick={onSubmitSkin}>\r\n                                                <BiCheck className=\"icon--sm\" />\r\n                                        </button>\r\n                                    }\r\n                                    {selectedSkin && \r\n                                        <>\r\n                                            <button \r\n                                                className=\"admin__card-btn mr-5\" \r\n                                                onClick={() => {}}>\r\n                                                    <BiPencil className=\"icon--sm\" />\r\n                                            </button>\r\n                                            <button \r\n                                                className=\"admin__card-btn\" \r\n                                                onClick={() => setConfirm('skin')}>\r\n                                                    <BiMinus className=\"icon--sm\" />\r\n                                            </button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                \r\n                            </>\r\n                        }\r\n                    </div>\r\n                    : (!addMode && <div className=\"admin__panel\"></div>)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst ActiveItemPanel = ({ close, data }) => {\r\n\r\n    return (\r\n        <div className=\"admin__panel\">\r\n            <div className=\"admin__panel-head flex aic jcsb\">\r\n                <h1 className=\"heading heaing--main\">{}</h1>\r\n                <button \r\n                    className=\"btn btn__circle\" \r\n                    onClick={close}>\r\n                        <BiX className=\"icon\" />\r\n                </button>\r\n            </div>\r\n            <div className=\"admin__panel-body\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Auth = ({ onAuth }) => {\r\n    const { t } = useTranslation();\r\n    const [login, setLogin] = useState('admin');\r\n    const [password, setPassword] = useState('hehe boay');\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onLogin = (e) => {\r\n        e.preventDefault();\r\n        if (login === '' || password === '')\r\n            return setError(t('error.fill all'));\r\n        setLoading(true);\r\n        axiosInstance.post('/users/login', {\r\n            login,\r\n            password\r\n        }).then((res) => {\r\n            console.log(res);\r\n            setLoading(true);\r\n            setError(null);\r\n            onAuth(res.data.token);\r\n        }).catch((er) => {\r\n            console.log(er.response.data.message);\r\n            setError(er.response.data.message);\r\n            setLoading(false);\r\n        });\r\n\r\n    };\r\n\r\n    if (loading)\r\n        return <Spinner />;\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"container\">\r\n                <div className=\"auth__wrapper\">\r\n                    <div className=\"auth__content\">\r\n                        <div className=\"auth__head\">\r\n                            <h1 className=\"auth__heading\">{t('nav.auth')}</h1>\r\n                            {error && <p className=\"auth__text--error\">{error}</p>}\r\n                        </div>\r\n                        <form className=\"auth__body\" onSubmit={(e) => onLogin(e)}>\r\n                            <label className=\"auth__label\">\r\n                                {t('input.y login')}\r\n                                <input \r\n                                    className=\"auth__input\" \r\n                                    placeholder={t('input.login')} \r\n                                    value={login} \r\n                                    type=\"text\"\r\n                                    onChange={(e) => setLogin(e.target.value)} />\r\n                            </label>\r\n                            <label className=\"auth__label mb-2\">\r\n                                {t('input.y password')}\r\n                                <input \r\n                                    className=\"auth__input\" \r\n                                    placeholder={t('input.password')} \r\n                                    value={password} \r\n                                    type=\"password\"\r\n                                    onChange={(e) => setPassword(e.target.value)} />\r\n                            </label>\r\n                            <button className=\"auth__btn\">\r\n                                {t('main.log in')}\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"auth__brand\">\r\n                        &copy;180Gradus {new Date().getFullYear()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPanel;\r\n\r\n// create skin, orders, all skins, categories, users\r\n// fetch all skins, preview skin, \r\n// all orders\r\n// all categories, devices per category\r\n// all users, users by type"],"sourceRoot":""}